<?php

/**
 * В этом задании необходимо разработать абстракцию для работы с отрезками (англ. segment),
 *  которая позволяет строить их из точек, извлекать из отрезков составные части (начало
 *  или конец отрезка), а также получать текстовое представление отрезка.
 * 
 * Абстракция заключается в том, что конкретное представление отрезка определяется внутри
 *  функций, описывающих работу с отрезками и зависит от создателя библиотеки. С точки 
 * зрения клиента библиотеки (кода который ее вызывает), не важно как конкретно устроен 
 * отрезок, важно только то, что есть некоторый набор функций (абстракция), позволяющий 
 * работать с ним.
 * 
 * src/segments.php
 * Определите следующие функции:
 * Конструктор makeSegment(), который принимает на вход две точки и возвращает отрезок.
 *  Первая точка это начало отрезка, вторая это конец.
 * Селекторы startSegment() и endSegment(), которые извлекают из отрезка его начальную
 *  и конечную точку соответственно.
 * Вспомогательную функцию segmentToString(), которая возвращает текстовое представление 
 * отрезка: [(1, 2), (-4, -2)].
 * Функцию middlePointSegment(), которая находит точку на середине отрезка по формулaм: 
 * x = (x1 + x2) / 2 и y = (y1 + y2) / 2.
 */

function makeSegment($point1, $point2)
{
    return cons($point1, $point2);
}

function startSegment($segment)
{
    return car($segment);
}

function endSegment($segment)
{
    return cdr($segment);
}

function segmentToString($segment)
{
    $x = startSegment($segment);
    $y = endSegment($segment);
    return '['.toString($x).', '.toString($y).']';

}

function middlePointSegment($segment)
{
    $x = (getX(car($segment)) + getX(cdr($segment))) / 2;
    $y = (getY(car($segment)) + getY(cdr($segment))) / 2;
    return makePoint($x, $y);
}
